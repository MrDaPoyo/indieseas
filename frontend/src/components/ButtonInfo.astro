---
const buttonId = await Astro.props.buttonId;
const response = await fetch(
    Astro.url.origin + `/api/getButtonInfo?buttonId=${buttonId}`,
).catch((error) => console.error("Error fetching button info:", error));
const button = response ? await response.json() : null;
---

<div id="background"></div>
{
    button && (
        <div class="button-info">
            <p>All the data we have about this button:</p>
            <table>
                <thead>
                    <tr>
                        <th>Property</th>
                        <th>Value</th>
                    </tr>
                </thead>
                <tbody>
                    {Object.entries(button).map(([key, value]) => (
                        <tr key={key}>
                            <td>{key}</td>
                            <td>
                                {key === "content" ? (
                                    <img
                                        src={
                                            "/api/getButton?buttonId=" +
                                            button.id
                                        }
                                        alt="Button!!1!"
                                    />
                                ) : key === "scraped_at" ||
                                  key === "scraped_at" ? (
                                    new Date(value as string).toLocaleString()
                                ) : key == "id" ? (
                                    "Secret :P"
                                ) : (
                                    (value as string) || "N/A"
                                )}
                            </td>
                        </tr>
                    ))}
                </tbody>
            </table>
        </div>
    )
}

<style>
    #background {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        z-index: -1;
        animation: appear 0.5s cubic-bezier(0.68, -0.55, 0.265, 1.55);
    }

    .button-info {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        padding: 1vh;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        z-index: 1000;
        border: 2px var(--primary) solid;
        animation: appear 0.5s cubic-bezier(0.68, -0.55, 0.265, 1.55);
    }

    @keyframes appear {
        from {
            opacity: 0;
            transform: translate(-50%, -60%) scale(0.95);
        }
        to {
            opacity: 1;
            transform: translate(-50%, -50%) scale(1);
        }
    }
</style>
