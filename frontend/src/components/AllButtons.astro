---
import Button from "./Button.astro";

const baseUrl = Astro.url.origin;

const response = await fetch(
	new URL(Astro.url.origin + `/api/allButtons?page=${Astro.url.searchParams.get("page") || 1}`).href,
	{
		method: "GET",
		headers: {
			"Content-Type": "application/json",
		},
	}
);

if (!response.ok) {
	throw new Error(
		`Error fetching buttons: ${response.statusText} (${response.status})`
	);
}

const buttons = await response.json();
const pagination = buttons.pagination;
---
<div class="pagination-container">
    <span>
        <a href="/">Back</a>
    </span>
    
    <div class="pagination">
        {pagination.hasPreviousPage && (
            <a href={`?page=${pagination.previousPage}`} class="pagination-link">Previous</a>
        )}
        
        <span class="page-info">
            Page {pagination.currentPage} of {pagination.totalPages}
            <span class="total-count">({pagination.totalButtons} total)</span>
        </span>
        
        {pagination.hasNextPage && (
            <a href={`?page=${pagination.nextPage}`} class="pagination-link">Next</a>
        )}
    </div>
</div>

<style>
    .pagination-container {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 0.5rem 1rem;
    }
    
    .pagination {
        display: flex;
        gap: 1rem;
        align-items: center;
    }
    
    .pagination-link {
        padding: 0.25rem 0.5rem;
        border: 1px solid #ccc;
        border-radius: 4px;
        text-decoration: none;
    }
    
    .pagination-link:hover {
        background-color: #f0f0f0;
    }
    
    .total-count {
        font-size: 0.8rem;
        color: #666;
        margin-left: 0.5rem;
    }
</style>
<div class="button-container">
	{
		buttons.buttons.map((button: any) => (
			<Button
				src={button.src}
				image={button.image}
				links_to={button.links_to}
				alt={button.alt}
			/>
		))
	}
</div>

<style>
	.button-container {
		padding: 1rem;
		position: relative;
	}
</style>
