---
const urlpathname = await Astro.props.buttonSearch ? "/buttons" : "/search";

const websitePlaceholders = [
	"Personal websites for y'all",
	"Indie websites at your avail",
	"The cool kid of the class",
	"Indie websites a click away",
	"Discover indie websites with ease",
	"Uncover indie gems!",
	"Index them all!",
	"Don't you love me websites"
];

const buttonPlaceholders = [
	"Search for a button",
	"Find your favorite 88x31 buttons",
	"Buttons, buttons, buttons!",
	"88x31 buttons at your avail",
	"Real buttons, just a click away",
	"Explore the indie web with buttons",
	"Index them all buttons!",
	"Don't you love me buttons",
	"Mmmmm buttons. I WANT MORE!!1!"
];
---

<form action="/search">
	<span id="typeOfSearch" style="display: none;">{urlpathname}</span>
	
	<input
		type="text"
		name="q"
		id="search"
		placeholder={Astro.props.buttonSearch ? buttonPlaceholders[Math.floor(Math.random() * buttonPlaceholders.length)] : websitePlaceholders[Math.floor(Math.random() * websitePlaceholders.length)]}
		value={Astro.props.query ? decodeURIComponent(Astro.props.query) : ""}
		autocomplete="off"
	/>
	<button type="submit">Search</button>
	<script defer>
		const form = document.querySelector("form");
		form.addEventListener("submit", (e) => {
			e.preventDefault();
			const input = document.querySelector("#search");
			if ((input && input.value.trim() == "") || input.value == null) {
				alert("Please enter a search term!");
				return;
			}
			const url = new URL(window.location.href);
			if (url.searchParams.has("q")) {
				url.searchParams.delete("q");
			}

			if (url.searchParams.has("color")) url.searchParams.delete("color");

			const new_url = document.getElementById("typeOfSearch").textContent + "?q=" + encodeURIComponent(input.value.trim())

			if (input && input.value.trim() !== "") {
				window.location.href = new_url;
			}
		});
	</script>
</form>
